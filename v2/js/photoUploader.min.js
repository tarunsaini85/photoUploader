
photoUpload = {				
		initNCUploader : function (ncParams){
			
			var d=this, opt=ncParams.options||ncParams;
			d.fltbox=opt.fltbox||"uplPhoto_Upload";//first input type file lightbox container id
			d.sltbox=opt.sltbox||"uplPhoto_Crop";//2nd images cropper lightbox container id
			d.loaderID=opt.loaderID||"uplPhoto_Loader";//temporary loader info container id
			d.errObj=opt.errObj||"uplPhotoErr";//any error container id
			d.thumbImg=opt.thumbImg||"photoFrameClass";//common class for thumbnail images
			d.mainImg=opt.mainImg||"uploadedPhotoUrlFromDisk";//main images id
			d.defImg=opt.defImg||"actualImageCropper";//an images as vertual [position:absolute] id
			d.mainImgCont=opt.mainImgCont||"imageContainer";//container of main images
			//d.dotImgSRC=opt.dotImgSRC;//cropper dot images src
			d.saveLoader=opt.saveLoader||"saveLoader";//loader images will be appered at the time of saving
			d.maxWidth=opt.maxWidth||400;//container maxWidth
			d.maxHeight=opt.maxHeight||400;//container max height	
			d.lightBoxId=opt.lightBoxId||"ltBoxcontainer";	//lightbox id
			d.captureTrigger=ncParams.photoCaptureTriggerId||null;
			
			$n('#'+d.captureTrigger).addEvent('click',function(event){
				photoUpload.init({
						evt:event,
						obj:$n(this),
						//saveUrl:ncParams.saveUrl,//where the imgages cordination will be send						
						imageUrl:ncParams.imageUrl,//cropper dot images src
						fileKey:ncParams.fileKey,// unique key required for nc uploader
						success:ncParams.successCallback,
						error:ncParams.errorCallback,
						capture:true
				});
			});
			
			//need two browser depepndent object instace of nc uploader		
			photoUpload.ncUploaderObj = new ncUploader({			
				appId:ncParams.appId,//unknown need to discussed 
				forceBasicUploader:true,//always true
				containerId:ncParams.containerId,//wrapper of input type file [required]
				fileId:ncParams.fileId,//id of input type
				target:ncParams.target,//unknown need to discussed
				extensions:ncParams.extensions,//img ext
				basicProgressBarId:photoUpload.loaderID,//temporary loader info container id
				callbackUrl:ncParams.callbackUrl+'callback.php',//response page
				callback:photoUpload.savePhoto,//callback function
				validationCallback:photoUpload.uploadValidation,//validation methid
				onchange:function(event){
										
					photoUpload.init({
						evt:event,
						obj:$n(this),
						//saveUrl:ncParams.saveUrl,//where the imgages cordination will be send						
						imageUrl:ncParams.imageUrl,//cropper dot images src
						fileKey:ncParams.fileKey,// unique key required for nc uploader
						success:ncParams.successCallback,
						error:ncParams.errorCallback
					})
				}
			});	
			
			photoUpload.ncUploaderObj1 = new ncUploader({
				appId:ncParams.appId,
				forceBasicUploader:true,
				containerId:ncParams.containerId,
				fileId:ncParams.fileId,
				target:ncParams.target,
				extensions:ncParams.extensions,
				basicProgressBarId:photoUpload.loaderID,
				callbackUrl:ncParams.callbackUrl+'callback1.php',
				callback:photoUpload.uploadPhoto,
				validationCallback:photoUpload.uploadValidation,
				onchange:function(event){
					photoUpload.init({
						evt:event,
						obj:$n(this),
						//saveUrl:ncParams.saveUrl,
						imageUrl:ncParams.imageUrl,
						fileKey:ncParams.fileKey,
						success:ncParams.successCallback,
						error:ncParams.errorCallback
					})
				}	});
		},
		//dotImgSRC	
		
		init : function (params){
			var t = this,
			evt=params.evt || window.event;		
			t.obj = params.obj;
			t.id = t.obj.attr('id');//input id			
			t.sCB = params.success;
			t.eCB = params.error;
			t.iUrl = params.imageUrl;
			t.key = params.fileKey;			
			t.loader =$n('#'+t.loaderID);			
			t.upload = $n('#'+t.fltbox);
			t.crop = $n('#'+t.sltbox);
			t.err = $n('#'+t.errObj);
			
			if(params.capture){
				photoUpload.clickPhoto();
				return;
			}
			
			var ext = t.obj.val().split('.').pop().toLowerCase(),vStat=true;
				
			if(t.checkFileSupport()){				
				var e = evt || window.event,files = e.target.files,fSize = Math.round((parseInt(files[0].size)/1024)*100)/100;
				if(fSize>1024)vStat=false;
			}
			if(ext!='png' && ext!='jpg' && ext!='jpeg' && ext!='gif' )vStat=false;
			if(vStat){	
					
				t.err.hide();
				t.loader.show();
				if(t.checkFileSupport()){t.readFile(e,t.id)}
				else{
					
					photoUpload.ncUploaderObj1.upload();
					
				}
			}
			else{t.showError("Please ensure that you are uploading a supported file format of max size 1 MB")}
		},	
		
		showError : function(msg){
			var t=this;
			t.loader.hide();
			t.err.show();
			t.err.html(msg);
		},
		
		checkFileSupport : function(){return (window.File && window.FileReader && window.FileList)},
		
		loadPhoto : function (url,captFlg){
			var t=this;
			var aw = t.maxWidth;
			var ah = t.maxHeight;
			var photoObj = $n('.'+t.thumbImg);			
			photoObj.each(function(){
			$n(this).attr('src','');
			$n(this).attr('src',url)
			})
			
			var photoImg=$n('#'+t.mainImg)
			photoImg.attr('src','');
			photoImg.attr('src',url);			
			t.loader.hide();
			t.upload.hide();
			t.crop.show();
			window.imgCrop = new ImageCropper();			
			
			//for(var i = 0; i<photoObj.length; i++){
				photoObj.eq(0).currObj().onload = function(obj){					
				return function(){
					var actualImageCropper = $n('#'+t.defImg);
					actualImageCropper.attr('src', url);
					var w = actualImageCropper.width();
					var h = actualImageCropper.height();
					
					if(w>h){
						actualImageCropper.css({'width': (w>aw ? aw : w) + 'px', 'height':'auto'})
					}else{
						actualImageCropper.css({'height': (h>ah ? ah : h) + 'px', 'width':'auto'})
					}
								
								var small_image_obj = obj;
								photoImg.css({'width':actualImageCropper.width()+'px'})
									small_image_obj.style.width=actualImageCropper.width()+'px';
									small_image_obj.style.height='auto';
								window.actual_width = small_image_obj.offsetWidth;
								window.actual_height = small_image_obj.offsetHeight;
								if(window.imgCrop){
									//delete window.imgCrop;
									var photoUploadCropArea =  document.getElementById(t.mainImgCont),
										photoFrame_crop_div = photoUploadCropArea.getElementsByTagName('div');
									for(var i=photoFrame_crop_div.length; i>0; i--){
										photoFrame_crop_div[i-1].parentNode.removeChild(photoFrame_crop_div[i-1]);
									}
								}
								t.cropImage(captFlg);
								obj.onload = null;
				}
				}(photoObj.currObj())
			//}
		},
			
		cropImage: function (captFlg) {
			var t = photoUpload,
				imageId = document.getElementById(t.mainImg),
				smallSquareImg = t.iUrl+"/small-dot.png",
				imgContainer = document.getElementById(t.mainImgCont),
				arrayConfig = {'cropToolBorderWidth': 1,
				'smallSquareWidth': 7,
				'crop_minimumWidthHeight': 15,
				'updateFormValuesAsYouDrag': false,
				'crop_script_alwaysPreserveAspectRatio': true,
				'crop_script_fixedRatio': 0.85,
				'percentageIntitialCrop': 25};				
				var smallImgClass=[];				
				var smallImgCls=$n('.'+t.thumbImg);
				smallImgCls.each(function(){
					smallImgClass.push($n(this).currObj());					
					})
			
			imgCrop.init_imageCrop(imageId, imgContainer, smallImgClass, photoUpload.cropCallback, photoUpload.cancelFunc, 'submit', 'cancel', smallSquareImg, arrayConfig, captFlg);
			imgCrop.setAction(photoUpload.cropCallback, photoUpload.cancelFunc, 'submit', 'cancel', captFlg);
		},
	
		cancelFunc : function (){hideLayer()},
	getScrollTop:function(){
		var _doc=document.documentElement?document.documentElement:document.body,scrollTop=0;
		scrollTop=window.pageYOffset?pageYOffset:_doc.scrollTop;
		return scrollTop;
		},
		uploadDiff : function (){
			var t = this;			
			$n('#'+t.id).val('');			
			$n('#'+t.mainImgCont+' div').hide();			
			t.crop.hide();
			t.upload.show();	
			
		},
	
		readFile : function (evt,id) {
			var files = evt.target.files;
			for (var i = 0, f; f = files[i]; i++) {
				if (!f.type.match('image.*')) {
					continue;
				}
	
				var reader = new FileReader();	
				reader.onload = (function(theFile) {
					return function(e){
						photoUpload.loadPhoto(e.target.result);
					};
				})(f);  	  
				reader.readAsDataURL(f);
			}
		},
		
		cropCallback : function (){
			var args=arguments,t=photoUpload;
			$n('#'+t.saveLoader).show();
			if(args.length==5){
				t.x1=args[0];
				t.y1=args[1];
				t.x2=args[2];
				t.y2=args[3];
				if(args[4])
					t.savePhoto('capture');
				else if(t.checkFileSupport())
					photoUpload.ncUploaderObj.upload();
				else
					t.savePhoto('save');
			}
		},
	
		uploadValidation : function (){			
			t.showError("Please ensure that you are uploading a supported file format of max size 1 MB");
		},
		
		uploadPhoto : function(resp){			
			var t = photoUpload;
			if(resp[t.key] && resp[t.key].URL)photoUpload.loadPhoto(resp[t.key].URL)
			else if(resp[t.key].ERROR){t.loader.hide();t.showError("Some error occured while uploading photo. Please try again.")}
		},
		
		savePhoto : function(resp){
			var t = photoUpload,ob=null;
			if(resp=='save' || (resp[t.key] && resp[t.key].URL) || resp=='capture'){
				t.loader.hide();
				$n('#'+t.saveLoader).hide();			
				hideLayer();
				if(resp=='capture' && photoUpload.captURL){
					ob = {x1:t.x1,y1:t.y1,x2:t.x2,y2:t.y2,base64:photoUpload.captURL}
				}
				else{
					ob = {x1:t.x1,y1:t.y1,x2:t.x2,y2:t.y2,filekey:t.key}
				}
				t.sCB(ob);
			}
				
			else if(resp[t.key].ERROR){
				$n('#'+t.saveLoader).hide();
				t.uploadDiff();			
				(t.eCB) ? t.eCB(resp[t.key].ERROR) : t.showError("Some error occured while uploading photo. Please try again.");
			}
		},
		clickPhoto : function(){
			var capt = capture();
			$n("#uplPhoto_Upload").hide();
			$n("#sec2").show();
			capt.start();
			$n("#closDLyr").addEvent("click",function(){
				$n("#uplPhoto_Upload").show();
				$n("#sec2").hide();
				capt.stop();
			});
			/*$n("#capture").addEvent("click",function(){
				$n("#uplPhoto_Upload").hide();
				$n("#sec2").show();
				capt.start();
			});*/
			$n("#savImg").addEvent("click",function(){
					photoUpload.captURL = $n("#capImg").currObj().src;
					photoUpload.loadPhoto(photoUpload.captURL,true);
					$n("#sec2").hide();		
					capt.stop();
			});
			$n("#container_close").addEvent("click",function(){
				if(capt)capt.stop();
			});
		}
	}


